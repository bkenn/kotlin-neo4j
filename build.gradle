buildscript {
    ext {
        jackson_kotlin_version = '2.9.6'
        jupiter_version = '5.0.0-M4'
        kotlin_version = '1.2.51'
        kotlin_loggin_version = '1.5.4'
        kotlin_random_version = '0.0.1'
        logback_version = '1.2.3'
        neo4j_version = '3.4.4'
        neo4j_driver_version = '1.6.2'
        sl4j_version = '1.7.21'
    }

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath group: 'org.junit.platform', name: 'junit-platform-gradle-plugin', version: '1.0.0-M4'
    }
}

apply plugin: 'idea'
apply plugin: 'kotlin'
apply plugin: 'org.junit.platform.gradle.plugin'

apply plugin: 'maven-publish'
apply plugin: 'signing'

group = 'io.github.erictsangx'
archivesBaseName = "kotlin-neo4j"
version = "0.0.6-SNAPSHOT"

junitPlatform {
    filters {
        includeClassNamePatterns '.*Test', '.*Spec'
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile "org.slf4j:slf4j-api:$sl4j_version"

    //neo4j
    compile "org.neo4j.driver:neo4j-java-driver:$neo4j_driver_version"

    //junit5
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testCompile("org.junit.jupiter:junit-jupiter-api:$jupiter_version")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:$jupiter_version")

    testCompile "io.github.erictsangx:kotlin-random:$kotlin_random_version"

    testCompile "io.github.microutils:kotlin-logging:$kotlin_loggin_version"
    testCompile "ch.qos.logback:logback-core:$logback_version"
    testCompile "ch.qos.logback:logback-classic:$logback_version"
    testCompile "org.neo4j:neo4j-slf4j:$neo4j_version"
    testCompile "org.neo4j.test:neo4j-harness:$neo4j_version"

    testCompile "com.fasterxml.jackson.module:jackson-module-kotlin:$jackson_kotlin_version"
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar, javadocJar
}

signing {
    sign configurations.archives
}


uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name "${project.group}:${project.archivesBaseName}"
                packaging 'jar'
                description "kotlin-neo4j is a wrapper of 'org.neo4j.driver:neo4j-java-driver' and written by Kotlin."
                url "https://github.com/erictsangx/kotlin-neo4j"

                scm {
                    connection 'scm:git:git://github.com/erictsangx/kotlin-neo4j.git'
                    developerConnection 'scm:git:ssh://github.com/erictsangx/kotlin-neo4j.git'
                    url 'https://github.com/erictsangx/kotlin-neo4j'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'erictsangx'
                        name 'Eric Tsang'
                        email 'erictsangx@gmail.com'
                    }
                }
            }
        }
    }
}

